@model PaginatedList<Contacts.Models.Establishment>

@{
    ViewData["Title"] = "Estabelecimento";
}

<h1>@ViewData["Title"]</h1>

<form class="form-inline mb-3" asp-action="Index" method="get">
    <div class="form-actions no-color">
        <div class="container">
            <div class="row">
                <div class="col d-flex justify-content-start">
                    <a asp-action="Create" class="btn btn-primary">Novo Cadastro</a>
                </div>
                <div class="col d-flex justify-content-end">
                    <label for="SearchString" class="mr-sm-2 form-label">Pesquisa:</label>
                    <input class="form-control mr-sm-2"
                           type="text" name="SearchString"
                           value="@ViewData["CurrentFilter"]" />
                    <button class="btn btn-primary mr-2"
                            type="submit">
                        Filtrar
                    </button>
                    <a class="btn btn-dark"
                       asp-action="Index">Voltar</a>
                </div>
            </div>
        </div>
    </div>
</form>

<table class="table table-striped table-hover">
    <thead>
        <tr class="bg-primary text-light">
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">
                    @Html.DisplayNameFor(model => model[0].Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Phone)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <a asp-action="Edit" class="btn btn-success btn-sm" asp-route-id="@item.Id">Editar</a>
                    <a asp-action="Details" class="btn btn-info btn-sm" asp-route-id="@item.Id">Detalhes</a>
                    <a asp-action="Delete" class="btn btn-danger btn-sm" asp-route-id="@item.Id">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var totalPages = Model.TotalPages + 1;
    var active = "";
}

<div>
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a class="page-link bg-light"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                <span>&laquo;</span>
            </a>
        </li>

        @for (int i = 1; i < totalPages; i++)
        {
            active = Model.PageIndex == i ? "active" : "";
            <li class="page-item @active">
                <a class="page-link bg-default"
                   asp-action="Index"
                   asp-route-pageNumber="@i">
                    <span>@i</span>
                </a>
            </li>
        }
        <li class="page-item @nextDisabled">
            <a class="page-link bg-light"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                <span>&raquo;</span>
            </a>
        </li>
    </ul>
</div>
